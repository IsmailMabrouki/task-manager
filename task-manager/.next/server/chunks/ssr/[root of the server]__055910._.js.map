{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ismai/OneDrive/Bureau/task-manager/task-manager/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://127.0.0.1:5000/', // Replace with your Flask backend URL\r\n});\r\n\r\nexport default api;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,SAAS;AACb;uCAEe"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ismai/OneDrive/Bureau/task-manager/task-manager/app/tasks/page.tsx"],"sourcesContent":["\"use client\";\r\nimport './Tasks.css';  // Import the CSS file\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../../utils/api';\r\n\r\ninterface Task {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    priority: number;\r\n    predicted_priority:number;\r\n    status: string;\r\n    deadline: string;\r\n}\r\n\r\nconst Tasks = () => {\r\n    const [tasks, setTasks] = useState<Task[]>([]);\r\n    const [newTask, setNewTask] = useState({ title: '', description: '', priority: '', deadline: '' });\r\n    const [editTask, setEditTask] = useState<Task | null>(null);  // State to hold task being edited\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await api.get('/api/tasks/prioritize', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setTasks(response.data); \r\n            console.log(\"Tasks : \", response.data);  // Assuming response.data is an array of tasks\r\n        } catch (error) {\r\n            console.error('Error fetching tasks', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    const handleAddTask = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const taskData = {\r\n                ...newTask,\r\n                priority: parseInt(newTask.priority),\r\n                deadline: new Date(newTask.deadline).toISOString(),\r\n            };\r\n\r\n            await api.post('/api/tasks', taskData, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            // Fetch updated tasks list after adding a new task\r\n            fetchTasks();\r\n\r\n            setNewTask({ title: '', description: '', priority: '', deadline: '' });\r\n            alert('Task added successfully');\r\n        } catch (error) {\r\n            console.error('Error adding task', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTask = async (taskId: number) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await api.delete(`/api/tasks/${taskId}`, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            // Fetch updated tasks list after deleting the task\r\n            fetchTasks();\r\n            alert('Task deleted successfully');\r\n        } catch (error) {\r\n            console.error('Error deleting task', error);\r\n        }\r\n    };\r\n\r\n    const handleEditTask = async (taskId: number) => {\r\n        const taskToEdit = tasks.find((task) => task.id === taskId);\r\n        if (taskToEdit) {\r\n            setEditTask(taskToEdit);  // Set the task being edited to the state\r\n        }\r\n    };\r\n\r\n    const handleUpdateTask = async () => {\r\n        if (editTask) {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const taskData = {\r\n                    ...editTask,\r\n                    priority: parseInt(editTask.priority.toString()),  // Ensure priority is a number\r\n                    deadline: new Date(editTask.deadline).toISOString(),  // Convert deadline to ISO string\r\n                };\r\n\r\n                await api.put(`/api/tasks/${editTask.id}`, taskData, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n\r\n                // Fetch updated tasks list after updating the task\r\n                fetchTasks();\r\n\r\n                setEditTask(null);  // Clear the task being edited\r\n                alert('Task updated successfully');\r\n            } catch (error) {\r\n                console.error('Error updating task', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tasks</h1>\r\n\r\n            {/* Add Task Form */}\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleAddTask();\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    value={newTask.title}\r\n                    onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Description\"\r\n                    value={newTask.description}\r\n                    onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Priority\"\r\n                    value={newTask.priority}\r\n                    onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    placeholder=\"Deadline\"\r\n                    value={newTask.deadline}\r\n                    onChange={(e) => setNewTask({ ...newTask, deadline: e.target.value })}\r\n                />\r\n                <button type=\"submit\">Add Task</button>\r\n            </form>\r\n\r\n            {/* Edit Task Form */}\r\n            {editTask && (\r\n                <div>\r\n                    <h2>Edit Task</h2>\r\n                    <form\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault();\r\n                            handleUpdateTask();\r\n                        }}\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Title\"\r\n                            value={editTask.title}\r\n                            onChange={(e) => setEditTask({ ...editTask, title: e.target.value })}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Description\"\r\n                            value={editTask.description}\r\n                            onChange={(e) => setEditTask({ ...editTask, description: e.target.value })}\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Priority\"\r\n                            value={editTask.priority}\r\n                            onChange={(e) => setEditTask({ ...editTask, priority: parseInt(e.target.value) })}\r\n                        />\r\n                        <input\r\n                            type=\"date\"\r\n                            placeholder=\"Deadline\"\r\n                            value={editTask.deadline}\r\n                            onChange={(e) => setEditTask({ ...editTask, deadline: e.target.value })}\r\n                        />\r\n\r\n                        {/* Dropdown for status */}\r\n                        <select\r\n                            value={editTask.status}\r\n                            onChange={(e) => setEditTask({ ...editTask, status: e.target.value })}\r\n                        >\r\n                            <option value=\"Not-started\">Not started</option>\r\n                            <option value=\"In-progress\">In progress</option>\r\n                            <option value=\"Complete\">Complete</option>\r\n                        </select>\r\n\r\n                        <button type=\"submit\">Update Task</button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n\r\n            {/* Task List */}\r\n            <ul>\r\n                <p> Sort tasks by predicted priority (lower predicted_priority indicates higher priority)\r\n                </p>\r\n                {tasks.map((task) => (\r\n                    <li key={task.id}>\r\n                        <strong>{task.title}</strong><br />\r\n                        {task.description}<br />\r\n                        Priority: {task.priority}<br />\r\n                        predicted_priority: {task.predicted_priority}<br />\r\n                        Status: {task.status} <br />\r\n                        Deadline: {task.deadline}<br />\r\n                        <button onClick={() => handleEditTask(task.id)}>Edit</button>\r\n                        <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}